version: 2.1

orbs:
  snyk: snyk/snyk@1.7.0
  aws-cli: circleci/aws-cli@4.0.0
  aws-ecr: circleci/aws-ecr@8.2.1

# ------------------
# EXECUTORS
# ------------------
executors:
  build-executor:
    docker:
      - image: cimg/base:2023.03

jobs:
  Build_and_Push_Docker_Image:
    executor: build-executor
    steps:
      - checkout
      - run:
          name: Install git-crypt
          command: |
            sudo apt-get update
            sudo apt-get install git-crypt
      - run:
          name: Decrypt secrets
          command: |
            echo "${GIT_CRYPT_KEY}" | base64 -d > git-crypt.key
            git-crypt unlock git-crypt.key
      - aws-cli/setup:
          role_arn: $ECR_ROLE_TO_ASSUME
          region: $ECR_REGION
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - run:
          name: Build docker image
          command: |
            docker build \
            --build-arg BUILD_DATE=$(date +%Y-%m-%dT%H:%M:%S%z) \
            --build-arg BUILD_TAG="app-${CIRCLE_SHA1}" \
            --build-arg APP_BRANCH=${CIRCLE_BRANCH} \
            -t app .
      - run:
          name: Push image to ECR repository
          command: |
            aws ecr get-login-password --region $ECR_REGION | docker login --username AWS --password-stdin ${AWS_ECR_REGISTRY_ID}.dkr.ecr.${ECR_REGION}.amazonaws.com
            docker tag app "${AWS_ECR_REGISTRY_ID}/laa-pcuam/laa-cwa-test-ecr:${CIRCLE_SHA1}"
            docker push "${AWS_ECR_REGISTRY_ID}/laa-pcuam/laa-cwa-test-ecr:${CIRCLE_SHA1}"
            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              docker tag app "${AWS_ECR_REGISTRY_ID}/laa-pcuam/laa-cwa-test-ecr:latest"
              docker push "${AWS_ECR_REGISTRY_ID}/laa-pcuam/laa-cwa-test-ecr:latest"
            fi

workflows:
  version: 2
  build_and_push:
    jobs:
      - Build_and_Push_Docker_Image

# steps:
#       # Checkout your repository
#       - checkout
#       # Authenticate to AWS using OIDC v2 with the AWS CLI
#       - aws-cli/setup:
#           role_arn: $ECR_ROLE_TO_ASSUME # this will use the env var
#           region: $ECR_REGION # this will use the env var
#       # Authenticate to the ECR repository using the standard command
#       - run: |
#           aws ecr get-login-password --region $ECR_REGION | docker login --username AWS --password-stdin ${AWS_ECR_REGISTRY_ID}.dkr.ecr.${ECR_REGION}.amazonaws.com
#       # Build and push your Docker image
#       - aws-ecr/build-image:
#           push-image: true
#           tag: ${CIRCLE_SHA1}
#           region: $ECR_REGION # this will use the env var
#           repo: $ECR_REPOSITORY # this will use the env var

