version: 2.1

orbs:
  aws-cli: circleci/aws-cli@4.0.0
  aws-ecr: circleci/aws-ecr@8.2.1
  helm: circleci/helm@2.0.1

# ------------------
# EXECUTORS
# ------------------
executors:
  build-executor:
    docker:
      - image: cimg/base:2023.03
  deploy-executor:
    resource_class: small
    docker:
      - image: ministryofjustice/cloud-platform-tools

jobs:
  Deploy_tests_on_cloud_platform:
    executor: deploy-executor
    parameters:
      environment:
        description: Destination environment
        type: string
        default: laa-cwa-test
      token:
        description: CircleCI Service account token
        type: string
        default: ${CIRCLE_CI_TOKEN}
    steps:
      - checkout
      - run:
          name: Authenticate with cluster
          command: |
            echo -n ${K8S_CLUSTER_CERT} | base64 -d > ./ca.crt
            kubectl config set-cluster ${K8S_CLUSTER_NAME} --certificate-authority=./ca.crt --server=https://${K8S_CLUSTER_NAME}
            kubectl config set-credentials circleci --token=<< parameters.token >>
            kubectl config set-context ${K8S_CLUSTER_NAME} --cluster=${K8S_CLUSTER_NAME} --user=circleci --namespace=<< parameters.environment >>
            kubectl config use-context ${K8S_CLUSTER_NAME}
            kubectl get pods
      - run:
          name: Deploy helm chart
          command: |
            export SANITISED_BRANCH=$(echo "${CIRCLE_BRANCH,,}" | sed -r 's/[/_]+/-/g')
            helm install --generate-name ./charts/cwa-tests \
            -f charts/cwa-tests/Values.yaml \
            --set ecr.image.tag=${SANITISED_BRANCH} \
            --wait --timeout 300s
            export POD_NAME=$(helm list -q | tail -1)
            kubectl logs -f ${POD_NAME}

  Build_and_Push_Docker_Image:
    executor: build-executor
    steps:
      - checkout
      - run:
          name: Install git-crypt
          command: |
            sudo apt-get update
            sudo apt-get install git-crypt
      - run:
          name: Decrypt secrets
          command: |
            echo "${GIT_CRYPT_KEY}" | base64 -d > git-crypt.key
            git-crypt unlock git-crypt.key
      - aws-cli/setup:
          role_arn: $ECR_ROLE_TO_ASSUME
          region: $ECR_REGION
      - setup_remote_docker:
          docker_layer_caching: true
      - run: |
          aws ecr get-login-password --region $ECR_REGION | docker login --username AWS --password-stdin ${AWS_ECR_REGISTRY_ID}.dkr.ecr.${ECR_REGION}.amazonaws.com
      - run:
          name: Set sanitised branch name
          command: |
            echo 'export SANITISED_BRANCH=$(echo "${CIRCLE_BRANCH,,}" | sed -r 's/[/_]+/-/g')' >> "$BASH_ENV"
            source "$BASH_ENV" 
      - aws-ecr/build-and-push-image:
          push-image: true
          tag: ${CIRCLE_SHA1},${SANITISED_BRANCH}
          region: $ECR_REGION
          repo: $ECR_REPOSITORY


workflows:
  version: 2
  build_and_push:
    jobs:
      - Build_and_Push_Docker_Image

  deploy_tests:
    jobs:
      - hold_test_deployment:
          type: approval
      - Deploy_tests_on_cloud_platform:
          requires:
            - hold_test_deployment
