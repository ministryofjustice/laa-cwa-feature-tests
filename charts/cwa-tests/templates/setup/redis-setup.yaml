{{- define "cwa-tests.setup.redis-setup" -}}
apiVersion: v1
kind: Pod
metadata:
  name: {{ .Release.Name }}-redis-setup
  labels:
    app: redis-setup
    app.kubernetes.io/managed-by: Helm
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Values.global.namespace }}
spec:
  restartPolicy: Never
  serviceAccountName: {{ .Values.global.serviceAccount }}
  securityContext:
    runAsUser: {{ .Values.securityContext.runAsUser }}
    runAsGroup: {{ .Values.securityContext.runAsGroup }}
    fsGroup: {{ .Values.securityContext.fsGroup }}
  initContainers:
    - name: wait-for-redis
      image: busybox
      command: ["sh", "-c", "until nc -z {{ .Release.Name }}-redis-service 6379; do echo waiting for {{ .Release.Name }}-redis-service; sleep 2; done"]
      securityContext:
        runAsNonRoot: true
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        seccompProfile:
          type: "{{ .Values.securityContext.seccompProfile.type }}"
  containers:
    - name: setup
      image: "{{ .Values.global.registryAddress }}/{{ .Values.global.regPath }}:{{ .Values.redisSetup.image.tag }}"
      securityContext:
        runAsNonRoot: true
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        seccompProfile:
          type: "{{ .Values.securityContext.seccompProfile.type }}"
      env:
        - name: COMMIT_SHA
          value: "{{ .Values.global.circle_sha1 }}"
        - name: REDIS_HOST
          value: "redis://{{ .Release.Name }}-redis-service.{{ .Values.global.namespace }}.svc.cluster.local:6379"
      volumeMounts:
        - name: artifact-volume
          mountPath: /artifacts
  volumes:
    - name: artifact-volume
      persistentVolumeClaim:
        claimName: "{{ .Release.Name }}-pvc"
---
{{- end -}}